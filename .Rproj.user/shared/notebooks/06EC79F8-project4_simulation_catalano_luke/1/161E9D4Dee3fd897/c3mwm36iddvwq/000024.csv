"0","library(cba)"
"0",""
"0","# Factors"
"0","obs_levels <- c(500, 1500, 2970)"
"0","sparse_levels <- c(1, 3, 6)"
"0",""
"0","# Sparsify"
"0","sparsify <- function(matrix, num_cols, target = 0.65) {"
"0","  cols <- sample(ncol(matrix), min(num_cols, ncol(matrix)))"
"0","  for (j in cols) {"
"0","    ones <- which(matrix[, j])"
"0","    to_zero <- sample(ones, size = max(0, length(ones) - round((1 - target) * nrow(matrix))))"
"0","    matrix[to_zero, j] <- FALSE"
"0","  }"
"0","  matrix"
"0","}"
"0",""
"0","# Loop: run and extract printed Jsim"
"0","for (obs in obs_levels) {"
"0","  for (sparse in sparse_levels) {"
"0","    matrix <- coffee_logical[sample(nrow(coffee_logical), obs), 1:4]"
"0","    matrix <- sparsify(matrix, sparse)"
"0","    storage.mode(matrix) <- ""logical"""
"0",""
"0","    model <- proximus(matrix)"
"0","    summary_lines <- capture.output(summary(model))"
"0","    jsim_line <- grep(""total  Jsim"", summary_lines, value = TRUE)"
"0","    jsim_value <- as.numeric(sub("".*Jsim: "", """", jsim_line))"
"0",""
"0","    cat(""Obs ="", obs, ""| Sparse ="", sparse, ""| Jsim ="", jsim_value, ""\n"")"
"0","  }"
"0","}"
